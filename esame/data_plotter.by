""" ------------------------------------------------------------------------
Classe per la gestione della creazione dei grafici
------------------------------------------------------------------------ """

import matplotlib.pyplot as plt

import conservatore
consClass = conservatore.consClass;

import SetGraph
setGraphClass = SetGraph.setGraphClass;

import parameter_setter
parSetClass = parameter_setter.parSetClass;

class DataPlotter{

	def __init__(self){
		pass
	}#enddef

	def plotCartesiano(self){

		figure, ax = plt.subplots();

		ax.set_title("Grafico prede e predatori in funzione del tempo");
		ax.set_ylabel("Numero prede e predatori");
		ax.set_xlabel("Tempo [s]");
		
		ax.plot(consClass.vettoreTempo, consClass.vettorePrede, linestyle="--", label="Prede");
		ax.plot(consClass.vettoreTempo, consClass.vettorePredatori, linestyle="--", label="Predatori");

		setGraphClass.makeFine(ax);

		plt.show(block=False);
		
	}#enddef

	def plotFasi(self){

		figure, ax = plt.subplots();

		ax.set_title("Grafico prede e predatori spazio delle fasi");
		ax.set_ylabel("Numero predatori");
		ax.set_xlabel("Numero prede");

        strLabel = r'$\ \alpha = $' + str(parSetClass.ALPHA) + r'$\ \beta = $' + str(parSetClass.BETA) + r'$\ \gamma = $' + str(parSetClass.GAMMA) + r'$\ \delta = $' + str(parSetClass.DELTA);
				
		ax.plot(consClass.vettorePrede, consClass.vettorePredatori, linestyle=":", label=strLabel);

		setGraphClass.makeFine(ax);

		plt.show(block=False);
		
	}#enddef
	
}#endclass

#istanza comune
dataPlotClass = DataPlotter();
