""" --------------------------------------------------------
Classe per il calcolo del potenziale
-------------------------------------------------------- """
import numpy as np

import conservatore

data = conservatore.data;
class Potenziale{

	def __init__(self){
		
		self.flagPotenzialeZero = True;
		self.flagPotenzialeCoulombino = True;
		self.flagPotenzialeYukawa = True;
		
	}#enddef

	def calcZero(self){

		if(self.flagPotenzialeZero){

			tmpList = [];
			for r in self.data.vettoreGriglia{
				tmpList.append(0);
			}

			self.flagPotenzialeZero = False;
			data.potenzialeZero = tmpList;
		}
		
	}#enddef

	def calcCoulomb(self){

		if(self.flagPotenzialeCoulombino){

			tmpList = [];
			for r in self.data.vettoreGriglia{
				dummy = -1 / r;
				tmpList.append(dummy);			
			}

			self.flagPotenzialeCoulombino = False;
			data.potenzialeCoulomb = tmpList;
		}
		
	}#enddef

	def calcYukawa(self){

		if(self.flagPotenzialeYukawa){

			for gamma in data.gammaY{

				tmpList = [];
				for r in data.vettoreGriglia{
					dummy1 = -1 / r ;
					dummy2 = np.exp( -r / gamma ); 
					tmpList.append(dummy1*dummy2);			
				}
				data.dictPotenzialeYukawa[str(gamma)] = tmpList;
			}
			self.flagPotenzialeYukawa = False;
		}
	}#enddef
	
}#endclass

#creiamo una istanza che possiamo utilizzare in ogni file
#che include questo script
potentialClass = Potenziale();
